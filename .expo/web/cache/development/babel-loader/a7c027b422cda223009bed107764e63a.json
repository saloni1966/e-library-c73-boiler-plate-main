{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/salonisharma/Downloads/e-library-c73-boiler-plate-main/screens/Transaction.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport * as Permissions from \"expo-permissions\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport db from \"../config\";\nimport firebase from \"firebase\";\n\nvar bgImage = require(\"../assets/background2.png\");\n\nvar appIcon = require(\"../assets/appIcon.png\");\n\nvar appName = require(\"../assets/appName.png\");\n\nvar TransactionScreen = function (_Component) {\n  _inherits(TransactionScreen, _Component);\n\n  var _super = _createSuper(TransactionScreen);\n\n  function TransactionScreen(props) {\n    var _this;\n\n    _classCallCheck(this, TransactionScreen);\n\n    _this = _super.call(this, props);\n\n    _this.getCameraPermissions = function _callee(domState) {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasCameraPermissions: status === \"granted\",\n                domState: domState,\n                scanned: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleBarCodeScanned = function _callee2(_ref) {\n      var type, data, domState;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n              domState = _this.state.domState;\n\n              if (domState === \"bookId\") {\n                _this.setState({\n                  bookId: data,\n                  domState: \"normal\",\n                  scanned: true\n                });\n              } else if (domState === \"studentId\") {\n                _this.setState({\n                  studentId: data,\n                  domState: \"normal\",\n                  scanned: true\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkBookAvailability = function _callee3(bookId) {\n      var bookRef, transactionType;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"books\").where(\"book_id\", \"==\", bookId).get());\n\n            case 2:\n              bookRef = _context3.sent;\n              transactionType = \"\";\n\n              if (bookRef.docs.length == 0) {\n                transactionType = false;\n              } else {\n                bookRef.docs.map(function (doc) {\n                  transactionType = doc.data().is_book_available ? \"issue\" : \"return\";\n                });\n              }\n\n              return _context3.abrupt(\"return\", transactionType);\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkStudentEligibilityForBookIssue = function _callee4(studentId) {\n      var studentRef, isStudentEligible;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"students\").where(\"student_id\", \"==\", studentId).get());\n\n            case 2:\n              studentRef = _context4.sent;\n              isStudentEligible = \"\";\n\n              if (studentRef.docs.length == 0) {\n                _this.setState({\n                  bookId: \"\",\n                  studentId: \"\"\n                });\n\n                isStudentEligible = false;\n                Alert.alert(\"The student id doesn't exist in the database!\");\n              } else {\n                studentRef.docs.map(function (doc) {\n                  if (doc.data().number_of_books_issued < 2) {\n                    isStudentEligible = true;\n                  } else {\n                    isStudentEligible = false;\n                    Alert.alert(\"The student has already issued 2 books!\");\n\n                    _this.setState({\n                      bookId: \"\",\n                      studentId: \"\"\n                    });\n                  }\n                });\n              }\n\n              return _context4.abrupt(\"return\", isStudentEligible);\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleTransaction = function _callee5() {\n      var _this$state, bookId, studentId, transactionType, isEligible, _this$state2, bookName, studentName, _this$state3;\n\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _this$state = _this.state, bookId = _this$state.bookId, studentId = _this$state.studentId;\n              _context5.next = 3;\n              return _regeneratorRuntime.awrap(_this.getBookDetails(bookId));\n\n            case 3:\n              _context5.next = 5;\n              return _regeneratorRuntime.awrap(_this.getStudentDetails(studentId));\n\n            case 5:\n              _context5.next = 7;\n              return _regeneratorRuntime.awrap(_this.checkBookAvailability(bookId));\n\n            case 7:\n              transactionType = _context5.sent;\n\n              if (transactionType) {\n                _context5.next = 13;\n                break;\n              }\n\n              _this.setState({\n                bookId: \"\",\n                studentId: \"\"\n              });\n\n              alert(\"The book doesn't exist in the library database!\");\n              _context5.next = 26;\n              break;\n\n            case 13:\n              if (!(transactionType === \"issue\")) {\n                _context5.next = 21;\n                break;\n              }\n\n              _context5.next = 16;\n              return _regeneratorRuntime.awrap(_this.checkStudentEligibilityForBookIssue(studentId));\n\n            case 16:\n              isEligible = _context5.sent;\n\n              if (isEligible) {\n                _this$state2 = _this.state, bookName = _this$state2.bookName, studentName = _this$state2.studentName;\n\n                _this.initiateBookIssue(bookId, studentId, bookName, studentName);\n              }\n\n              Alert.alert(\"Book issued to the student!\");\n              _context5.next = 26;\n              break;\n\n            case 21:\n              _context5.next = 23;\n              return _regeneratorRuntime.awrap(_this.checkStudentEligibilityForBookReturn(bookId, studentId));\n\n            case 23:\n              isEligible = _context5.sent;\n\n              if (isEligible) {\n                _this$state3 = _this.state, bookName = _this$state3.bookName, studentName = _this$state3.studentName;\n\n                _this.initiateBookReturn(bookId, studentId, bookName, studentName);\n              }\n\n              Alert.alert(\"Book returned to the library!\");\n\n            case 26:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getBookDetails = function (bookId) {\n      bookId = bookId.trim();\n      db.collection(\"books\").where(\"book_id\", \"==\", bookId).get().then(function (snapshot) {\n        snapshot.docs.map(function (doc) {\n          _this.setState({\n            bookName: doc.data().book_details.book_name\n          });\n        });\n      });\n    };\n\n    _this.getStudentDetails = function (studentId) {\n      studentId = studentId.trim();\n      db.collection(\"students\").where(\"student_id\", \"==\", studentId).get().then(function (snapshot) {\n        snapshot.docs.map(function (doc) {\n          _this.setState({\n            studentName: doc.data().student_details.student_name\n          });\n        });\n      });\n    };\n\n    _this.checkStudentEligibilityForBookReturn = function _callee6(bookId, studentId) {\n      var transactionRef, isStudentEligible;\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"transactions\").where(\"book_id\", \"==\", bookId).limit(1).get());\n\n            case 2:\n              transactionRef = _context6.sent;\n              isStudentEligible = \"\";\n              transactionRef.docs.map(function (doc) {\n                var lastBookTransaction = doc.data();\n\n                if (lastBookTransaction.student_id === studentId) {\n                  isStudentEligible = true;\n                } else {\n                  isStudentEligible = false;\n                  Alert.alert(\"The book wasn't issued by this student!\");\n\n                  _this.setState({\n                    bookId: \"\",\n                    studentId: \"\"\n                  });\n                }\n              });\n              return _context6.abrupt(\"return\", isStudentEligible);\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.initiateBookIssue = function _callee7(bookId, studentId, bookName, studentName) {\n      return _regeneratorRuntime.async(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              db.collection(\"transactions\").add({\n                student_id: studentId,\n                student_name: studentName,\n                book_id: bookId,\n                book_name: bookName,\n                date: firebase.firestore.Timestamp.now().toDate(),\n                transaction_type: \"issue\"\n              });\n              db.collection(\"books\").doc(bookId).update({\n                is_book_available: false\n              });\n              db.collection(\"students\").doc(studentId).update({\n                number_of_books_issued: firebase.firestore.FieldValue.increment(1)\n              });\n\n              _this.setState({\n                bookId: \"\",\n                studentId: \"\"\n              });\n\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.initiateBookReturn = function _callee8(bookId, studentId, bookName, studentName) {\n      return _regeneratorRuntime.async(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              db.collection(\"transactions\").add({\n                student_id: studentId,\n                student_name: studentName,\n                book_id: bookId,\n                book_name: bookName,\n                date: firebase.firestore.Timestamp.now().toDate(),\n                transaction_type: \"return\"\n              });\n              db.collection(\"books\").doc(bookId).update({\n                is_book_available: true\n              });\n              db.collection(\"students\").doc(studentId).update({\n                number_of_books_issued: firebase.firestore.FieldValue.increment(-1)\n              });\n\n              _this.setState({\n                bookId: \"\",\n                studentId: \"\"\n              });\n\n            case 4:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      bookId: \"\",\n      studentId: \"\",\n      domState: \"normal\",\n      hasCameraPermissions: null,\n      scanned: false,\n      bookName: \"\",\n      studentName: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(TransactionScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state4 = this.state,\n          bookId = _this$state4.bookId,\n          studentId = _this$state4.studentId,\n          domState = _this$state4.domState,\n          scanned = _this$state4.scanned;\n\n      if (domState !== \"normal\") {\n        return React.createElement(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : this.handleBarCodeScanned,\n          style: StyleSheet.absoluteFillObject,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 9\n          }\n        });\n      }\n\n      return React.createElement(KeyboardAvoidingView, {\n        behavior: \"padding\",\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 7\n        }\n      }, React.createElement(ImageBackground, {\n        source: bgImage,\n        style: styles.bgImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.upperContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        source: appIcon,\n        style: styles.appIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }\n      }), React.createElement(Image, {\n        source: appName,\n        style: styles.appName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.lowerContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.textinputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        style: styles.textinput,\n        placeholder: \"Book Id\",\n        placeholderTextColor: \"#FFFFFF\",\n        value: bookId,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            bookId: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 15\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.scanbutton,\n        onPress: function onPress() {\n          return _this2.getCameraPermissions(\"bookId\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.scanbuttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 17\n        }\n      }, \"Scan\"))), React.createElement(View, {\n        style: [styles.textinputContainer, {\n          marginTop: 25\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        style: styles.textinput,\n        placeholder: \"Student Id\",\n        placeholderTextColor: \"#FFFFFF\",\n        value: studentId,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            studentId: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 15\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.scanbutton,\n        onPress: function onPress() {\n          return _this2.getCameraPermissions(\"studentId\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.scanbuttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 17\n        }\n      }, \"Scan\"))), React.createElement(TouchableOpacity, {\n        style: [styles.button, {\n          marginTop: 25\n        }],\n        onPress: this.handleTransaction,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 15\n        }\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return TransactionScreen;\n}(Component);\n\nexport { TransactionScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFFFFF\"\n  },\n  bgImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  },\n  upperContainer: {\n    flex: 0.5,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  appIcon: {\n    width: 200,\n    height: 200,\n    resizeMode: \"contain\",\n    marginTop: 80\n  },\n  appName: {\n    width: 80,\n    height: 80,\n    resizeMode: \"contain\"\n  },\n  lowerContainer: {\n    flex: 0.5,\n    alignItems: \"center\"\n  },\n  textinputContainer: {\n    borderWidth: 2,\n    borderRadius: 10,\n    flexDirection: \"row\",\n    backgroundColor: \"#9DFD24\",\n    borderColor: \"#FFFFFF\"\n  },\n  textinput: {\n    width: \"57%\",\n    height: 50,\n    padding: 10,\n    borderColor: \"#FFFFFF\",\n    borderRadius: 10,\n    borderWidth: 3,\n    fontSize: 18,\n    backgroundColor: \"#5653D4\",\n    fontFamily: \"Rajdhani_600SemiBold\",\n    color: \"#FFFFFF\"\n  },\n  scanbutton: {\n    width: 100,\n    height: 50,\n    backgroundColor: \"#9DFD24\",\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  scanbuttonText: {\n    fontSize: 24,\n    color: \"#0A0101\",\n    fontFamily: \"Rajdhani_600SemiBold\"\n  },\n  button: {\n    width: \"43%\",\n    height: 55,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#F48D20\",\n    borderRadius: 15\n  },\n  buttonText: {\n    fontSize: 24,\n    color: \"#FFFFFF\",\n    fontFamily: \"Rajdhani_600SemiBold\"\n  }\n});","map":{"version":3,"sources":["/Users/salonisharma/Downloads/e-library-c73-boiler-plate-main/screens/Transaction.js"],"names":["React","Component","Permissions","BarCodeScanner","db","firebase","bgImage","require","appIcon","appName","TransactionScreen","props","getCameraPermissions","domState","askAsync","CAMERA","status","setState","hasCameraPermissions","scanned","handleBarCodeScanned","type","data","state","bookId","studentId","checkBookAvailability","collection","where","get","bookRef","transactionType","docs","length","map","doc","is_book_available","checkStudentEligibilityForBookIssue","studentRef","isStudentEligible","Alert","alert","number_of_books_issued","handleTransaction","getBookDetails","getStudentDetails","isEligible","bookName","studentName","initiateBookIssue","checkStudentEligibilityForBookReturn","initiateBookReturn","trim","then","snapshot","book_details","book_name","student_details","student_name","limit","transactionRef","lastBookTransaction","student_id","add","book_id","date","firestore","Timestamp","now","toDate","transaction_type","update","FieldValue","increment","undefined","StyleSheet","absoluteFillObject","styles","container","upperContainer","lowerContainer","textinputContainer","textinput","text","scanbutton","scanbuttonText","marginTop","button","buttonText","create","flex","backgroundColor","resizeMode","justifyContent","alignItems","width","height","borderWidth","borderRadius","flexDirection","borderColor","padding","fontSize","fontFamily","color","borderTopRightRadius","borderBottomRightRadius"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n  Text,\n  ImageBackground,\n  Image,\n  Alert,\n  ToastAndroid,\n  KeyboardAvoidingView\n} from \"react-native\";\nimport * as Permissions from \"expo-permissions\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport db from \"../config\";\nimport firebase from \"firebase\";\n\nconst bgImage = require(\"../assets/background2.png\");\nconst appIcon = require(\"../assets/appIcon.png\");\nconst appName = require(\"../assets/appName.png\");\n\nexport default class TransactionScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bookId: \"\",\n      studentId: \"\",\n      domState: \"normal\",\n      hasCameraPermissions: null,\n      scanned: false,\n      bookName: \"\",\n      studentName: \"\"\n    };\n  }\n\n  getCameraPermissions = async domState => {\n    const { status } = await Permissions.askAsync(Permissions.CAMERA);\n\n    this.setState({\n      /*status === \"granted\" is true when user has granted permission\n          status === \"granted\" is false when user has not granted the permission\n        */\n      hasCameraPermissions: status === \"granted\",\n      domState: domState,\n      scanned: false\n    });\n  };\n\n  handleBarCodeScanned = async ({ type, data }) => {\n    const { domState } = this.state;\n\n    if (domState === \"bookId\") {\n      this.setState({\n        bookId: data,\n        domState: \"normal\",\n        scanned: true\n      });\n    } else if (domState === \"studentId\") {\n      this.setState({\n        studentId: data,\n        domState: \"normal\",\n        scanned: true\n      });\n    }\n  };\n  checkBookAvailability = async bookId => {\n    const bookRef = await db\n      .collection(\"books\")\n      .where(\"book_id\", \"==\", bookId)\n      .get();\n\n    var transactionType = \"\";\n    if (bookRef.docs.length == 0) {\n      transactionType = false;\n    } else {\n      bookRef.docs.map(doc => {\n        //if the book is available then transaction type will be issue\n        // otherwise it will be return\n        transactionType = doc.data().is_book_available ? \"issue\" : \"return\";\n      });\n    }\n\n    return transactionType;\n  };\n\n  checkStudentEligibilityForBookIssue = async studentId => {\n    const studentRef = await db\n      .collection(\"students\")\n      .where(\"student_id\", \"==\", studentId)\n      .get();\n\n    var isStudentEligible = \"\";\n    if (studentRef.docs.length == 0) {\n      this.setState({\n        bookId: \"\",\n        studentId: \"\"\n      });\n      isStudentEligible = false;\n      Alert.alert(\"The student id doesn't exist in the database!\");\n    } else {\n      studentRef.docs.map(doc => {\n        if (doc.data().number_of_books_issued < 2) {\n          isStudentEligible = true;\n        } else {\n          isStudentEligible = false;\n          Alert.alert(\"The student has already issued 2 books!\");\n          this.setState({\n            bookId: \"\",\n            studentId: \"\"\n          });\n        }\n      });\n    }\n\n    return isStudentEligible;\n  };\n\n\n  ///bp\n  handleTransaction = async () => {\n    var { bookId, studentId } = this.state;\n    await this.getBookDetails(bookId);\n    await this.getStudentDetails(studentId);\n\n    var transactionType = await this.checkBookAvailability(bookId);\n\n    if (!transactionType) {\n      this.setState({ bookId: \"\", studentId: \"\" });\n      // For Android users only\n      // ToastAndroid.show(\"The book doesn't exist in the library database!\", ToastAndroid.SHORT);\n      alert(\"The book doesn't exist in the library database!\");\n    } else if (transactionType === \"issue\") {\n      var isEligible = await this.checkStudentEligibilityForBookIssue(\n        studentId\n      );\n\n      if (isEligible) {\n        var { bookName, studentName } = this.state;\n        this.initiateBookIssue(bookId, studentId, bookName, studentName);\n      }\n      // For Android users only\n      // ToastAndroid.show(\"Book issued to the student!\", ToastAndroid.SHORT);\n      Alert.alert(\"Book issued to the student!\");\n    } else {\n      var isEligible = await this.checkStudentEligibilityForBookReturn(\n        bookId,\n        studentId\n      );\n\n      if (isEligible) {\n        var { bookName, studentName } = this.state;\n        this.initiateBookReturn(bookId, studentId, bookName, studentName);\n      }\n      // For Android users only\n      // ToastAndroid.show(\"Book returned to the library!\", ToastAndroid.SHORT);\n      Alert.alert(\"Book returned to the library!\");\n    }\n  };\n\n  getBookDetails = bookId => {\n    bookId = bookId.trim();\n    db.collection(\"books\")\n      .where(\"book_id\", \"==\", bookId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.map(doc => {\n          this.setState({\n            bookName: doc.data().book_details.book_name\n          });\n        });\n      });\n  };\n\n  getStudentDetails = studentId => {\n    studentId = studentId.trim();\n    db.collection(\"students\")\n      .where(\"student_id\", \"==\", studentId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.map(doc => {\n          this.setState({\n            studentName: doc.data().student_details.student_name\n          });\n        });\n      });\n  };\n\n  \n\n  \n\n  //Bp\n  checkStudentEligibilityForBookReturn = async (bookId, studentId) => {\n    const transactionRef = await db\n      .collection(\"transactions\")\n      .where(\"book_id\", \"==\", bookId)\n      .limit(1)\n      .get();\n    var isStudentEligible = \"\";\n    transactionRef.docs.map(doc => {\n      var lastBookTransaction = doc.data();\n      if (lastBookTransaction.student_id === studentId) {\n        isStudentEligible = true;\n      } else {\n        isStudentEligible = false;\n        Alert.alert(\"The book wasn't issued by this student!\");\n        this.setState({\n          bookId: \"\",\n          studentId: \"\"\n        });\n      }\n    });\n    return isStudentEligible;\n  };\n\n  initiateBookIssue = async (bookId, studentId, bookName, studentName) => {\n    //add a transaction\n    db.collection(\"transactions\").add({\n      student_id: studentId,\n      student_name: studentName,\n      book_id: bookId,\n      book_name: bookName,\n      date: firebase.firestore.Timestamp.now().toDate(),\n      transaction_type: \"issue\"\n    });\n    //change book status\n    db.collection(\"books\")\n      .doc(bookId)\n      .update({\n        is_book_available: false\n      });\n    //change number  of issued books for student\n    db.collection(\"students\")\n      .doc(studentId)\n      .update({\n        number_of_books_issued: firebase.firestore.FieldValue.increment(1)\n      });\n\n    // Updating local state\n    this.setState({\n      bookId: \"\",\n      studentId: \"\"\n    });\n  };\n\n  initiateBookReturn = async (bookId, studentId, bookName, studentName) => {\n    //add a transaction\n    db.collection(\"transactions\").add({\n      student_id: studentId,\n      student_name: studentName,\n      book_id: bookId,\n      book_name: bookName,\n      date: firebase.firestore.Timestamp.now().toDate(),\n      transaction_type: \"return\"\n    });\n    //change book status\n    db.collection(\"books\")\n      .doc(bookId)\n      .update({\n        is_book_available: true\n      });\n    //change number  of issued books for student\n    db.collection(\"students\")\n      .doc(studentId)\n      .update({\n        number_of_books_issued: firebase.firestore.FieldValue.increment(-1)\n      });\n\n    // Updating local state\n    this.setState({\n      bookId: \"\",\n      studentId: \"\"\n    });\n  };\n\n  render() {\n    const { bookId, studentId, domState, scanned } = this.state;\n    if (domState !== \"normal\") {\n      return (\n        <BarCodeScanner\n          onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\n          style={StyleSheet.absoluteFillObject}\n        />\n      );\n    }\n    return (\n      <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\n        <ImageBackground source={bgImage} style={styles.bgImage}>\n          <View style={styles.upperContainer}>\n            <Image source={appIcon} style={styles.appIcon} />\n            <Image source={appName} style={styles.appName} />\n          </View>\n          <View style={styles.lowerContainer}>\n            <View style={styles.textinputContainer}>\n              <TextInput\n                style={styles.textinput}\n                placeholder={\"Book Id\"}\n                placeholderTextColor={\"#FFFFFF\"}\n                value={bookId}\n                onChangeText={text => this.setState({ bookId: text })}\n              />\n              <TouchableOpacity\n                style={styles.scanbutton}\n                onPress={() => this.getCameraPermissions(\"bookId\")}\n              >\n                <Text style={styles.scanbuttonText}>Scan</Text>\n              </TouchableOpacity>\n            </View>\n            <View style={[styles.textinputContainer, { marginTop: 25 }]}>\n              <TextInput\n                style={styles.textinput}\n                placeholder={\"Student Id\"}\n                placeholderTextColor={\"#FFFFFF\"}\n                value={studentId}\n                onChangeText={text => this.setState({ studentId: text })}\n              />\n              <TouchableOpacity\n                style={styles.scanbutton}\n                onPress={() => this.getCameraPermissions(\"studentId\")}\n              >\n                <Text style={styles.scanbuttonText}>Scan</Text>\n              </TouchableOpacity>\n            </View>\n            <TouchableOpacity\n              style={[styles.button, { marginTop: 25 }]}\n              onPress={this.handleTransaction}\n            >\n              <Text style={styles.buttonText}>Submit</Text>\n            </TouchableOpacity>\n          </View>\n        </ImageBackground>\n      </KeyboardAvoidingView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFFFFF\"\n  },\n  bgImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  },\n  upperContainer: {\n    flex: 0.5,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  appIcon: {\n    width: 200,\n    height: 200,\n    resizeMode: \"contain\",\n    marginTop: 80\n  },\n  appName: {\n    width: 80,\n    height: 80,\n    resizeMode: \"contain\"\n  },\n  lowerContainer: {\n    flex: 0.5,\n    alignItems: \"center\"\n  },\n  textinputContainer: {\n    borderWidth: 2,\n    borderRadius: 10,\n    flexDirection: \"row\",\n    backgroundColor: \"#9DFD24\",\n    borderColor: \"#FFFFFF\"\n  },\n  textinput: {\n    width: \"57%\",\n    height: 50,\n    padding: 10,\n    borderColor: \"#FFFFFF\",\n    borderRadius: 10,\n    borderWidth: 3,\n    fontSize: 18,\n    backgroundColor: \"#5653D4\",\n    fontFamily: \"Rajdhani_600SemiBold\",\n    color: \"#FFFFFF\"\n  },\n  scanbutton: {\n    width: 100,\n    height: 50,\n    backgroundColor: \"#9DFD24\",\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  scanbuttonText: {\n    fontSize: 24,\n    color: \"#0A0101\",\n    fontFamily: \"Rajdhani_600SemiBold\"\n  },\n  button: {\n    width: \"43%\",\n    height: 55,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#F48D20\",\n    borderRadius: 15\n  },\n  buttonText: {\n    fontSize: 24,\n    color: \"#FFFFFF\",\n    fontFamily: \"Rajdhani_600SemiBold\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}